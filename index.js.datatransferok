var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);
var fs = require('fs');

var index=0;
var temp = 0;

var dataSize = 512;
var bufferSize = dataSize*2;
var value = new Array(bufferSize/2);

app.get('/', function(req, res){
  res.sendfile('index.html.datatransferok');
var read = fs.createReadStream('/mnt/mmc/snow/SS_OLD/ALOOH/src/AnalogSensor/result/A09', {
	bufferSize: bufferSize
});

read.on('data',function(data){
	//console.log(data.toString());
	value.length=0;
	for(index=0;index<bufferSize/2;index++){
		//value[index] = data[index*2+1]*256+data[index*2];
		//console.log(data[index*2+1]*256+data[index*2]);
		value.push((data[index*2+1]*256+data[index*2])/256);
		
	}
	//console.log(data);
 	io.emit('chat message',value);
	})
  .on('end',   function()          { console.log('read: end');    })
  .on('error', function(e)         { console.log('read: error');  })
  .on('close', function()          { console.log('read: close');  })
  .on('fd',    function(fd)        { console.log('read: fd');     })
;
});
app.get('/processing.js', function(req, res){
  res.sendfile('processing.js');
});

io.on('connection', function(socket){
  console.log('a user connected');
  socket.on('disconnect', function(){
    console.log('user disconnected');
  });
  socket.on('chat message', function(msg){
    io.emit('chat message', msg);
  });
});
http.listen(3000, function(){
  console.log('listening on *:3000');
});



